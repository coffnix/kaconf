#!/bin/bash

ROOTDIR="/opt/kaconf"
TMPDIR="${ROOTDIR}/tmp"
LOGDIR="${ROOTDIR}/log"
#SENHA_DB="xptyz"
#MYSQL="/usr/bin/mysql -p${SENHA_DB}"

# variaveis template net
#IPADDRS_TEMPLATE
#GATEWAY_TEMPLATE
#NAMESERVER_TEMPLATE

#################################################
function validateIP()
 {
         local ip=${lerIP_LOCAL}
         local stat=1
         if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                OIFS=$IFS
                IFS='.'
                ip=($ip)
                IFS=$OIFS
                [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
                && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
                stat=$?
        fi
        return $stat
}
#################################################
function validateGATEWAY()
 {
         local ip=${lerGATEWAY_LOCAL}
         local stat=1
         if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                OIFS=$IFS
                IFS='.'
                ip=($ip)
                IFS=$OIFS
                [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
                && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
                stat=$?
        fi
        return $stat
}
#################################################
function validateIPTS()
 {
         local ip=${lerNOVO_IP_TS}
         local stat=1
         if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                OIFS=$IFS
                IFS='.'
                ip=($ip)
                IFS=$OIFS
                [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
                && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
                stat=$?
        fi
        return $stat
}
#################################################

dialog --backtitle " kaconf " --title " kaconf " --msgbox "\n\nSeja bem vindo ao assistente de configuração kaconf!\n\nPara configurar corretamente seu equipamento, basta responder as próximas perguntas adiante...\n\n\n(Pressione [ENTER] para continuar)\n" 14 70

# criando lista de interfaces disponiveis
ifconfig -a|cut -d" " -f1|sort|grep -v lo|sed '/^[\ ]\+\?$/d'|egrep -v "ip6tn|ip6gre|tun" > ${TMPDIR}/SeTinterfaces
ARQUIVO="${TMPDIR}/SeTinterfaces"

dialog --backtitle " kaconf " --title " SELECIONE UM DISPOSITIVO DE REDE "  --menu 'Selecione o dispositivo a ser configurado como rede interna (LAN):' 15 45 10 $(cut -d: -f1 ${ARQUIVO} | sed s,$," # ",) 2> ${TMPDIR}/selectNET
if [ ! $? = 0 ]; then
	#rm ${TMPDIR}/selectNET
	exit
else
sed -i /$( cat ${TMPDIR}/selectNET )/d ${TMPDIR}/SeTinterfaces
fi

DEVICE=$( cat ${TMPDIR}/selectNET )

#########################################

defineIP() {

lerIP_LOCAL=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite o IP local do dispositivo (sem mascara de rede)\n\nEx.:  192.168.0.50\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        exit
else

        validateIP ${lerIP_LOCAL}
        if [[ $? -ne 0 ]];then
                dialog --title " Erro ao configurar IP local " --msgbox "\nDigite um IP válido.\n" 9 60
		#defineIP
        else
        	echo "${lerIP_LOCAL}" > ${TMPDIR}/selectIP_LOCAL
	fi
fi
}

defineIP

        if [ -z "${lerIP_LOCAL}" ]; then
                dialog --title " Erro ao configurar IP local " --msgbox "\nDigite um IP válido.\n" 9 60
		defineIP
		if [ -z "${lerIP_LOCAL}" ]; then
			echo -e "\nVocê precisa digitar um IP válido. Por favor execute o kaconf novamente.\n\n" ; exit
		fi
        fi

#####################################################

defineMASK() {

lerMASK_LOCAL=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite a máscara da rede do dispositivo\n\nEx.: /24 ou /29\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        #rm ${TMPDIR}/selectMASK_LOCAL
        exit
else
        echo "${lerMASK_LOCAL}" > ${TMPDIR}/selectMASK_LOCAL
fi
}

defineMASK

        if [ -z "${lerMASK_LOCAL}" ]; then
                dialog --title " Erro ao configurar a máscara de rede " --msgbox "\nDigite um máscara de rede válida.\n" 9 60
                defineMASK
                if [ -z "${lerMASK_LOCAL}" ]; then
                        echo -e "\nVocê precisa digitar uma máscara de rede válida. Por favor execute o kaconf novamente.\n\n" ; exit
                fi
        fi


#####################################################

defineGATEWAY() {

lerGATEWAY_LOCAL=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite o GATEWAY local do dispositivo\n\nEx.:  192.168.0.1\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        exit
fi

        validateGATEWAY ${lerGATEWAY_LOCAL}
        if [[ $? -ne 0 ]];then
                dialog --title " Erro ao configurar IP do GATEWAY " --msgbox "\nDigite um IP válido.\n" 9 60
                #defineGATEWAY
        else
        	echo "${lerGATEWAY_LOCAL}" > ${TMPDIR}/selectGATEWAY_LOCAL
	fi
}

defineGATEWAY

        if [ -z "${lerGATEWAY_LOCAL}" ]; then
                dialog --title " Erro ao configurar IP do GATEWAY " --msgbox "\nDigite um GATEWAY válido.\n" 9 60
                defineGATEWAY
                if [ -z "${lerGATEWAY_LOCAL}" ]; then
                        echo -e "\nVocê precisa digitar um GATEWAY válido. Por favor execute o kaconf novamente.\n\n" ; exit
                fi
        fi
#####################################################
defineDNS_LOCAL() {
lerDNS_LOCAL=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite o(s) servidor(es) DNS do dispositivo\n\nEx.:  8.8.8.8 192.168.0.1\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        #rm ${TMPDIR}/selectDNS_LOCAL
        exit
else
        echo "${lerDNS_LOCAL}" > ${TMPDIR}/selectDNS_LOCAL
fi
}

defineDNS_LOCAL

        if [ -z "${lerDNS_LOCAL}" ]; then
                dialog --title " Erro ao configurar hostname local " --msgbox "\nDigite pelo menos um servidor DNS válido.\n" 9 60
                defineDNS_LOCAL
                if [ -z "${lerDNS_LOCAL}" ]; then
                        echo -e "\nVocê precisa digitar pelo menos um servidor DNS válido. Por favor execute o kaconf novamente.\n\n" ; exit
                fi
        fi
#####################################################

defineHOSTNAME_LOCAL() {
lerHOSTNAME_LOCAL=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite o hostname local do dispositivo\n\nEx.:  rasp-002\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        #rm ${TMPDIR}/selectHOSTNAME_LOCAL
        exit
else
        echo "${lerHOSTNAME_LOCAL}" > ${TMPDIR}/selectHOSTNAME_LOCAL
fi
}

defineHOSTNAME_LOCAL

        if [ -z "${lerHOSTNAME_LOCAL}" ]; then
                dialog --title " Erro ao configurar hostname local " --msgbox "\nDigite um hostname válido.\n" 9 60
		defineHOSTNAME_LOCAL
                if [ -z "${lerHOSTNAME_LOCAL}" ]; then
                        echo -e "\nVocê precisa digitar um HOSTNAME válido. Por favor execute o kaconf novamente.\n\n" ; exit
                fi
        fi

############################################################################################################################################################################################
defineIPTS() {
lerNOVO_IP_TS=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite o IP do servidor TS\n\nEx.:  192.168.0.10\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        exit
fi

        validateIPTS ${lerNOVO_IP_TS}
        if [[ $? -ne 0 ]];then
                dialog --title " Erro ao configurar IP do servidor TS " --msgbox "\nDigite um IP válido.\n" 9 60
                #defineIPTS
        else
       		echo "${lerNOVO_IP_TS}" > ${TMPDIR}/selectNOVO_IP_TS
        fi
}

defineIPTS


        if [ -z "${lerNOVO_IP_TS}" ]; then
                dialog --title " Erro ao configurar IP local " --msgbox "\nDigite um IP válido.\n" 9 60
		defineIPTS
                if [ -z "${lerNOVO_IP_TS}" ]; then
                        echo -e "\nVocê precisa digitar um IP do servidor TS válido. Por favor execute o kaconf novamente.\n\n" ; exit
                fi
        fi





#####################################################
defineDOMINIO() {
lerNOVO_DOMINIO_TS=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite o domínio (opcional)\n\nEx.:  hackstore\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        #rm ${TMPDIR}/selectNOVO_DOMINIO_TS
        exit
fi
}

defineDOMINIO

        if [ ! -z "${lerNOVO_DOMINIO_TS}" ]; then
#                dialog --title " Erro ao configurar usuário " --msgbox "\nDigite um usuário válido.\n" 9 60
#        else
                echo "${lerNOVO_DOMINIO_TS}" > ${TMPDIR}/selectNOVO_DOMINIO_TS
	else
		declare lerNOVO_DOMINIO_TS="nenhum"		
        fi


#####################################################
defineUSUARIO() {
lerNOVO_USUARIO_TS=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite o usuário para conexão ao TS\n\nEx.:  user01\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        #rm ${TMPDIR}/selectNOVO_USUARIO_TS
        exit
fi
}
defineUSUARIO

        if [ -z "${lerNOVO_USUARIO_TS}" ]; then
                dialog --title " Erro ao configurar usuário " --msgbox "\nDigite um usuário válido.\n" 9 60
		defineUSUARIO
		if [ -z "${lerNOVO_USUARIO_TS}" ]; then
		echo -e "\nVocê precisa digitar um usuário válido. Por favor execute o kaconf novamente.\n\n" ; exit
                fi

        else
                echo "${lerNOVO_USUARIO_TS}" > ${TMPDIR}/selectNOVO_USUARIO_TS
        fi

#####################################################
defineSENHA() {
lerNOVA_SENHA_TS=$( dialog --backtitle " kaconf " --stdout --title ' kaconf ' --inputbox " \nDigite a senha do usuário para conexão ao TS\n\nEx.:  xptyz@123\n\n\n\n" 11 60 )
if [ ! $? = 0 ]; then
        #rm ${TMPDIR}/selectNOVA_SENHA_TS
        exit
fi
}
defineSENHA
        if [ -z "${lerNOVA_SENHA_TS}" ]; then
                dialog --title " Erro ao configurar senha do usuário TS " --msgbox "\nDigite uma senha válida.\n" 9 60
		defineSENHA
        else
                echo "${lerNOVA_SENHA_TS}" > ${TMPDIR}/selectNOVA_SENHA_TS
        fi

############################################################################################################################################################################################
# Confirmação das opções
dialog --backtitle " kaconf " --title " kaconf " --yesno "\nInterface de rede interna (LAN):  ${DEVICE}\n\nIP local configurado: ${lerIP_LOCAL}${lerMASK_LOCAL}\n\nGateway default configurado: $(cat ${TMPDIR}/selectGATEWAY_LOCAL)\n\nServidor(es) DNS: $(cat ${TMPDIR}/selectDNS_LOCAL)\n\nHostname local configurado: $(cat ${TMPDIR}/selectHOSTNAME_LOCAL)\n\nIP do servidor TS: ${lerNOVO_IP_TS}\n\nDomínio TS: ${lerNOVO_DOMINIO_TS}\n\nUsuário TS: ${lerNOVO_USUARIO_TS}\n\nSenha do usuário TS: ${lerNOVA_SENHA_TS}\n\n\nConfirma?" 28 70
                        if [ ! $? = 0 ]; then
                                exit
                        fi

##################################################
# Define conf do lxdm.conf

# LOCAL
cp /opt/kaconf/conf/netif.ethx.template ${TMPDIR}/netif.${DEVICE}
sed -i s,"{IPADDRS_TEMPLATE}","$(cat ${TMPDIR}/selectIP_LOCAL ${TMPDIR}/selectMASK_LOCAL|awk '{printf("%s", $0 (NR==1 ? "" : ""))}' $1)",g ${TMPDIR}/netif.${DEVICE}
sed -i s,"{GATEWAY_TEMPLATE}","$(cat ${TMPDIR}/selectGATEWAY_LOCAL)",g ${TMPDIR}/netif.${DEVICE}
sed -i s,"{NAMESERVER_TEMPLATE}","$(cat ${TMPDIR}/selectDNS_LOCAL)",g ${TMPDIR}/netif.${DEVICE}

cp ${TMPDIR}/netif.${DEVICE} /etc/conf.d/
rm /etc/init.d/netif.${DEVICE} ; cd /etc/init.d/ ; ln -s netif.tmpl netif.${DEVICE} ; rc-update add netif.${DEVICE} default

#####################################################
# Hostname
echo -e "hostname=\"$(cat ${TMPDIR}/selectHOSTNAME_LOCAL)\"" > /etc/conf.d/hostname
cp /opt/kaconf/conf/hosts.template ${TMPDIR}/hosts
sed -i s,"{HOSTNAME_TEMPLATE}","$(cat ${TMPDIR}/selectHOSTNAME_LOCAL)",g ${TMPDIR}/hosts ; cp ${TMPDIR}/hosts /etc/hosts
hostname $(cat ${TMPDIR}/selectHOSTNAME_LOCAL)


#####################################################
# LXDM (acesso TS)


if [ ${lerNOVO_DOMINIO_TS} = "nenhum" ]; then
	cp /opt/kaconf/conf/lxdm.conf.template ${TMPDIR}/lxdm.conf
	sed -i s,"{NOVO_IP_TS}","$(cat ${TMPDIR}/selectNOVO_IP_TS)",g ${TMPDIR}/lxdm.conf
	sed -i s,"{NOVO_USUARIO_TS}","$(cat ${TMPDIR}/selectNOVO_USUARIO_TS)",g ${TMPDIR}/lxdm.conf
	sed -i s,"{NOVA_SENHA_TS}","$(cat ${TMPDIR}/selectNOVA_SENHA_TS)",g ${TMPDIR}/lxdm.conf
else
	cp /opt/kaconf/conf/lxdm.conf.domain.template ${TMPDIR}/lxdm.conf
	sed -i s,"{NOVO_IP_TS}","$(cat ${TMPDIR}/selectNOVO_IP_TS)",g ${TMPDIR}/lxdm.conf
	sed -i s,"{NOVO_DOMINIO_TS}","$(cat ${TMPDIR}/selectNOVO_DOMINIO_TS)",g ${TMPDIR}/lxdm.conf
	sed -i s,"{NOVO_USUARIO_TS}","$(cat ${TMPDIR}/selectNOVO_USUARIO_TS)",g ${TMPDIR}/lxdm.conf
	sed -i s,"{NOVA_SENHA_TS}","$(cat ${TMPDIR}/selectNOVA_SENHA_TS)",g ${TMPDIR}/lxdm.conf
fi

cp ${TMPDIR}/lxdm.conf /etc/lxdm/lxdm.conf
rc-update add xdm
/etc/init.d/xdm restart
/etc/init.d/netif.${DEVICE} restart

#############################################################################################################################################################################################

/etc/init.d/netif.${DEVICE} restart

dialog --backtitle " kaconf " --title " kaconf " --msgbox "\n\nConfiguração do dispositivo realizada com sucesso.\n" 9 50
clear
